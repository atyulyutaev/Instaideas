import asyncio
import pickle

from adapters.story_generator import StoryPersonal, StoryExpert

story_personal = StoryPersonal(
    clickbait_event="Сходил в аптеку",
    plot_start="Еще 5 лет назад я пообщела себе, что не буду покупать аптечные препараты, так как у меня частые проблемы со здоровьем я часто хожу к врачу и не посещаю аптеки",
    plot_development="Бюквально недавно я понял, что я проебал миллион рублей врачей, и принял для себя решение, что в аптеку ходить выгодней",
    storytelling="Из-за своего скептического подхода, я начал изучать страницы врачей блогеров, которые на своей страничке рекомендуют определенные места, где можно покупать лекарства",
    plot_continuation="Один блогер посоветовал аптеку возле моего дома, в которой все лекарства дешевые, и 100% помогают",
    intermediate_results="По итогу, пошел в аптеку, правда дешево, купил лекарство, у меня отказала печень",
    conclusion="Вывод не верьте блогерам, они все обманщики",
    speech_style_names=["легкомысленный", "немного самоиронии и юмора"]
)

story_expert = StoryExpert(
    hook="В лаборатории Дэвида Эверетта зазвучал будильник, разбудив его из глубоких раздумий. Подходя к столу, он наткнулся на запись о параллельных вселенных, которая возбудила его научное любопытство.",
    reengagement="Перечитав свои старые идеи, Дэвид почувствовал новую волну вдохновения и решимости исследовать эту тему.",
    plot_establishment="Он начал серию экспериментов, стремясь доказать существование параллельных вселенных, используя самые передовые технологии.",
    climax="Внезапно один из экспериментов привел к необычному сигналу, который нельзя было объяснить обычными законами физики.",
    resolution="Анализ данных показал, что сигнал действительно подтверждает существование параллельных вселенных, открывая новые горизонты для научных исследований и технологических достижений.",
    speech_style_names=["учебный"],
)

story = story_expert


async def main():
    serialized_story = pickle.dumps(story)
    print(len(serialized_story))


if __name__ == "__main__":
    asyncio.run(main())
